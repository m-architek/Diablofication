OUTER_SET EFF_V2_SIZE = 272
OUTER_SET EFF_V2_OPCODE_OFFSET = 0x10
OUTER_SET EFF_V2_TARGET_TYPE_OFFSET = 0x14
OUTER_SET EFF_V2_POWER_OFFSET = 0x18
OUTER_SET EFF_V2_PARAM_1_OFFSET = 0x1c
OUTER_SET EFF_V2_PARAM_2_OFFSET = 0x20
OUTER_SET EFF_V2_TIMING_MODE_OFFSET = 0x24
OUTER_SET EFF_V2_DURATION_OFFSET = 0x28
OUTER_SET EFF_V2_PROBABILITY_1_OFFSET = 0x2c
OUTER_SET EFF_V2_PROBABILITY_2_OFFSET = 0x2e
OUTER_SET EFF_V2_RESREF_OFFSET = 0x30
OUTER_SET EFF_V2_DISPEL_RESISTANCE_OFFSET = 0x5c
OUTER_SET EFF_V2_VARIABLE_NAME_OFFSET = 0xa8
OUTER_SET EFF_V2_MAX_LEVEL_OFFSET = 0x38
OUTER_SET EFF_V2_MIN_LEVEL_OFFSET = 0x3c
OUTER_SET EFF_V2_PARENT_RESOURCE_TYPE_OFFSET = 0x90
OUTER_SET EFF_V2_PARENT_RESOURCE_OFFSET = 0x94

OUTER_SET EFF_V2_PARENT_RESOURCE_TYPE_NONE = 0
OUTER_SET EFF_V2_PARENT_RESOURCE_TYPE_SPELL = 1
OUTER_SET EFF_V2_PARENT_RESOURCE_TYPE_ITEM = 2


ACTION_DEFINE_ASSOCIATIVE_ARRAY EFF_V2_STRATEGY BEGIN 
    size => ~%EFF_V2_SIZE%~
    read_strategy => ~EFF_V2_READ_STRATEGY~
    write_strategy => ~EFF_V2_WRITE_STRATEGY~
END


ACTION_DEFINE_ASSOCIATIVE_ARRAY EFF_V2_READ_STRATEGY BEGIN
    opcode => ~READ_EFF_V2_OPCODE~
    parameter1 => ~READ_EFF_V2_PARAMETER1~
    parameter2 => ~READ_EFF_V2_PARAMETER2~
    dispel_resistance => ~READ_EFF_V2_DISPEL_RESISTANCE~
    min_level => ~READ_EFF_V2_MIN_LEVEL~
    resource => ~READ_EFF_V2_RESOURCE~
END

DEFINE_PATCH_FUNCTION READ_EFF_V2_OPCODE INT_VAR offset_shift = ~~ RET opcode
BEGIN READ_LONG (offset_shift + EFF_V2_OPCODE_OFFSET) opcode END

DEFINE_PATCH_FUNCTION READ_EFF_V2_PARAMETER1 INT_VAR offset_shift = ~~ RET parameter1
BEGIN READ_LONG (offset_shift + EFF_V2_PARAM_1_OFFSET) parameter1 END

DEFINE_PATCH_FUNCTION READ_EFF_V2_PARAMETER2 INT_VAR offset_shift = ~~ RET parameter2
BEGIN READ_LONG (offset_shift + EFF_V2_PARAM_2_OFFSET) parameter2 END

DEFINE_PATCH_FUNCTION READ_EFF_V2_DISPEL_RESISTANCE INT_VAR offset_shift = ~~ RET dispel_resistance
BEGIN READ_LONG (offset_shift + EFF_V2_DISPEL_RESISTANCE_OFFSET) dispel_resistance END

DEFINE_PATCH_FUNCTION READ_EFF_V2_MIN_LEVEL INT_VAR offset_shift = ~~ RET min_level
BEGIN READ_LONG (offset_shift + EFF_V2_MIN_LEVEL_OFFSET) min_level END

DEFINE_PATCH_FUNCTION READ_EFF_V2_RESOURCE INT_VAR offset_shift = ~~ RET resource
BEGIN READ_ASCII (offset_shift + EFF_V2_RESREF_OFFSET) resource END


ACTION_DEFINE_ASSOCIATIVE_ARRAY EFF_V2_WRITE_STRATEGY BEGIN
    opcode => ~WRITE_EFF_V2_OPCODE~
    parameter1 => ~WRITE_EFF_V2_PARAMETER1~
    parameter2 => ~WRITE_EFF_V2_PARAMETER2~
    dispel_resistance => ~WRITE_EFF_V2_DISPEL_RESISTANCE~
    max_level => ~WRITE_EFF_V2_MAX_LEVEL~
    min_level => ~WRITE_EFF_V2_MIN_LEVEL~
    resource => ~WRITE_EFF_V2_RESOURCE~
END

DEFINE_PATCH_FUNCTION WRITE_EFF_V2_OPCODE INT_VAR offset_shift = ~~ opcode = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V2_OPCODE_OFFSET) opcode END

DEFINE_PATCH_FUNCTION WRITE_EFF_V2_PARAMETER1 INT_VAR offset_shift = ~~ parameter1 = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V2_PARAM_1_OFFSET) parameter1 END

DEFINE_PATCH_FUNCTION WRITE_EFF_V2_PARAMETER2 INT_VAR offset_shift = ~~ parameter2 = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V2_PARAM_2_OFFSET) parameter2 END

DEFINE_PATCH_FUNCTION WRITE_EFF_V2_DISPEL_RESISTANCE INT_VAR offset_shift = ~~ dispel_resistance = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V2_DISPEL_RESISTANCE_OFFSET) dispel_resistance END

DEFINE_PATCH_FUNCTION WRITE_EFF_V2_MAX_LEVEL INT_VAR offset_shift = ~~ max_level = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V2_MAX_LEVEL_OFFSET) max_level END

DEFINE_PATCH_FUNCTION WRITE_EFF_V2_MIN_LEVEL INT_VAR offset_shift = ~~ min_level = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V2_MIN_LEVEL_OFFSET) min_level END

DEFINE_PATCH_FUNCTION WRITE_EFF_V2_RESOURCE INT_VAR offset_shift = ~~ STR_VAR resource = ~~
BEGIN WRITE_ASCII (offset_shift + EFF_V2_RESREF_OFFSET) ~%resource%~ #8 END


DEFINE_PATCH_FUNCTION ALTER_EFF_V2_EFFECT
    INT_VAR opcode = ~~
        target_type = EFF_TARGET_PRESET
        power = 0
        parameter1 = 0
        parameter2 = 0
        timing_mode = EFF_TIMING_INSTANT_PERMANENT_UNTIL_DEATH
        dispel_resistance = 0
        duration = 0
        probability1 = 100
        probability2 = 0
        max_level = 0
        min_level = 0
        parent_resource_type = EFF_V2_PARENT_RESOURCE_TYPE_NONE
    STR_VAR resource = ~~
        parent_resource = ~~
        variable_name = ~~
BEGIN
    WRITE_LONG EFF_V2_OPCODE_OFFSET opcode
    WRITE_LONG EFF_V2_TARGET_TYPE_OFFSET target_type
    WRITE_LONG EFF_V2_POWER_OFFSET power
    WRITE_LONG EFF_V2_PARAM_1_OFFSET parameter1
    WRITE_LONG EFF_V2_PARAM_2_OFFSET parameter2
    WRITE_SHORT EFF_V2_TIMING_MODE_OFFSET timing_mode
    WRITE_LONG EFF_V2_DURATION_OFFSET duration
    WRITE_SHORT EFF_V2_PROBABILITY_1_OFFSET probability1
    WRITE_SHORT EFF_V2_PROBABILITY_2_OFFSET probability2
    WRITE_LONG EFF_V2_DISPEL_RESISTANCE_OFFSET dispel_resistance
    WRITE_LONG EFF_V2_MAX_LEVEL_OFFSET max_level
    WRITE_LONG EFF_V2_MIN_LEVEL_OFFSET min_level
    WRITE_ASCII EFF_V2_RESREF_OFFSET ~%resource%~ #8
    WRITE_ASCII EFF_V2_VARIABLE_NAME_OFFSET ~%variable_name%~ #32
    WRITE_LONG EFF_V2_PARENT_RESOURCE_TYPE_OFFSET parent_resource_type
    WRITE_ASCII EFF_V2_PARENT_RESOURCE_OFFSET ~%parent_resource%~ #8
END


DEFINE_PATCH_FUNCTION PATCH_EFF_V2_EFFECT
    STR_VAR patches_ref = 0
    RET_ARRAY created_eff_resources
BEGIN
    CLEAR_ARRAY created_eff_resources

    LPF PATCH_EFF_EFFECT INT_VAR offset_shift = 0
        STR_VAR patches_ref eff_strategy_ref = ~EFF_V2_STRATEGY~
        RET_ARRAY created_eff_resources
        END
END


DEFINE_ACTION_FUNCTION PATCH_EFF_V2_EFFECT_RECURSIVE 
    INT_VAR iteration = 1
    STR_VAR glob = ~^.+\.eff$~ patches_ref = 0
    RET_ARRAY created_eff_resources
BEGIN
    ACTION_CLEAR_ARRAY created_eff_resources
    ACTION_IF (iteration < 10) BEGIN 
        LOG ~PATCH_EFF_V2_EFFECT_RECURSIVE: start iteration %iteration%~

        OUTER_SPRINT next_patches_ref ~patches_%iteration%~ 
        ACTION_CLEAR_ARRAY ~%next_patches_ref%~
        OUTER_SET next_patches_length = 0

        COPY_EXISTING_REGEXP GLOB ~%glob%~ ~override~
            CLEAR_ARRAY patch_created_eff_resources

            LPF PATCH_EFF_V2_EFFECT STR_VAR patches_ref
                RET_ARRAY patch_created_eff_resources = created_eff_resources
                END

            PHP_EACH patch_created_eff_resources AS key => value BEGIN             
                SPRINT source_resource ~%key_0%~
                SPRINT target_resource ~%key_1%~
                SPRINT patch_name ~%source_resource%_%target_resource%~
                SPRINT patch_ref ~patch_%patch_name%~

                PATCH_LOG ~PATCH_EFF_V2_EFFECT_RECURSIVE iteration %iteration%: append next patch %patch_name%~
                CLEAR_ARRAY ~%patch_ref%~

                DEFINE_ASSOCIATIVE_ARRAY ~%patch_ref%~ BEGIN 
                    patch_type => ~CLONE~
                    match_resource => ~%source_resource%~
                    resource => ~%target_resource%~
                END
                DEFINE_ASSOCIATIVE_ARRAY ~%next_patches_ref%~ BEGIN 
                    ~%patch_name%~ => ~%patch_ref%~ 
                END
                SET next_patches_length = next_patches_length + 1
            END

            PHP_EACH patch_created_eff_resources AS key => value BEGIN             
                DEFINE_ASSOCIATIVE_ARRAY created_eff_resources BEGIN 
                    ~%key_0%~, ~%key_1%~ => ~%value%~
                END
            END
            BUT_ONLY


        ACTION_IF (next_patches_length) BEGIN 
            LAF PATCH_EFF_V2_EFFECT_RECURSIVE INT_VAR iteration = iteration + 1
                STR_VAR glob patches_ref = ~%next_patches_ref%~
                RET_ARRAY next_created_eff_resources = created_eff_resources
                END
        END

        ACTION_PHP_EACH next_created_eff_resources AS key => value BEGIN 
            ACTION_DEFINE_ASSOCIATIVE_ARRAY created_eff_resources BEGIN 
                ~%key_0%~, ~%key_1%~ => ~%value%~
            END
        END
    END ELSE BEGIN 
        WARN ~Recursive eff patching reached %iteration% iterations. Circular EFF dependency?~
    END
END
