OUTER_SET SPL_ABILITIES_OFFSET = 0x64
OUTER_SET SPL_ABILITIES_COUNT = 0x68
OUTER_SET SPL_ABILITY_SIZE = 40

OUTER_SET SPL_ABILITY_TYPE_OFFSET = 0x2
OUTER_SET SPL_ABILITY_TYPE_SPELL = 2

OUTER_SET SPL_EFFECTS_OFFSET = 0x6a
OUTER_SET SPL_EFFECT_SIZE = 48

OUTER_SET SPL_ABILITY_EFFECTS_COUNT = 0x1e
OUTER_SET SPL_ABILITY_EFFECTS_INDEX_OFFSET = 0x20

OUTER_SET SPL_CASTING_EFFECTS_INDEX_OFFSET = 0x6e
OUTER_SET SPL_CASTING_EFFECTS_COUNT = 0x70


DEFINE_PATCH_FUNCTION ADD_SPL_ABILITY
    INT_VAR ability_type = 0
    RET index
BEGIN
    READ_LONG SPL_ABILITIES_OFFSET abilities_offset
    READ_SHORT SPL_ABILITIES_COUNT index
    READ_LONG SPL_EFFECTS_OFFSET effects_offset

    SET offset = abilities_offset + index * SPL_ABILITY_SIZE

    INSERT_BYTES offset SPL_ABILITY_SIZE

    WRITE_SHORT (offset + SPL_ABILITY_TYPE_SPELL) ability_type

    WRITE_SHORT SPL_ABILITIES_COUNT (index + 1)
    WRITE_LONG SPL_EFFECTS_OFFSET (effects_offset + SPL_ABILITY_SIZE)
END


DEFINE_PATCH_FUNCTION PRINT_SPL_USING_OPCODE
    INT_VAR opcode = ~~
BEGIN
    READ_LONG SPL_ABILITIES_OFFSET abilities_offset
    READ_SHORT SPL_ABILITIES_COUNT abilities_count
    READ_LONG SPL_EFFECTS_OFFSET effects_offset

    FOR (ability_index = 0; ability_index < abilities_count; ++ability_index) BEGIN
        SET ability_offset = abilities_offset + ability_index * SPL_ABILITY_SIZE

        READ_SHORT (ability_offset + SPL_ABILITY_EFFECTS_COUNT) ability_effects_count
        READ_SHORT (ability_offset + SPL_ABILITY_EFFECTS_INDEX_OFFSET) ability_effects_index_offset

        FOR (ability_effect_index = 0; ability_effect_index < ability_effects_count; ++ability_effect_index) BEGIN
            SET ability_effect_offset = effects_offset +
                (ability_effects_index_offset + ability_effect_index) * SPL_EFFECT_SIZE

            READ_SHORT ability_effect_offset ability_effect_opcode
            PATCH_IF (ability_effect_opcode = opcode) BEGIN
                SET print = 1
            END
        END
    END

    READ_SHORT SPL_CASTING_EFFECTS_INDEX_OFFSET casting_effects_index_offset
    READ_SHORT SPL_CASTING_EFFECTS_COUNT casting_effects_count

    FOR (casting_effect_index = 0; casting_effect_index < casting_effects_count; ++casting_effect_index) BEGIN
        SET casting_effect_offset = effects_offset + 
            (casting_effects_index_offset + casting_effect_index) * SPL_EFFECT_SIZE

        READ_SHORT casting_effect_offset casting_effect_opcode
        PATCH_IF (casting_effect_opcode = opcode) BEGIN
            SET print = 1
        END
    END

    PATCH_IF (VARIABLE_IS_SET print) BEGIN
        PATCH_PRINT ~PRINT_SPL_USING_OPCODE %opcode%: %SOURCE_RES%~
    END
END
