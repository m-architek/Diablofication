OUTER_SET SPL_ABILITIES_OFFSET = 0x64
OUTER_SET SPL_ABILITIES_COUNT = 0x68
OUTER_SET SPL_ABILITY_SIZE = 40

OUTER_SET SPL_EFFECTS_OFFSET = 0x6a
OUTER_SET SPL_EFFECT_SIZE = 48

OUTER_SET SPL_ABILITY_TYPE_OFFSET = 0x2
OUTER_SET SPL_ABILITY_TYPE_SPELL = 2
OUTER_SET SPL_ABILITY_TYPE_INNATE = 4

OUTER_SET SPL_ABILITY_EFFECTS_COUNT = 0x1e
OUTER_SET SPL_ABILITY_EFFECTS_INDEX_OFFSET = 0x20

OUTER_SET SPL_CASTING_EFFECTS_INDEX_OFFSET = 0x6e
OUTER_SET SPL_CASTING_EFFECTS_COUNT = 0x70

OUTER_SET SPL_EFFECT_OPCODE_OFFSET = 0x0
OUTER_SET SPL_EFFECT_TARGET_TYPE_OFFSET = 0x2
OUTER_SET SPL_EFFECT_POWER_OFFSET = 0x3
OUTER_SET SPL_EFFECT_PARAM_1_OFFSET = 0x4
OUTER_SET SPL_EFFECT_PARAM_2_OFFSET = 0x8
OUTER_SET SPL_EFFECT_TIMING_MODE_OFFSET = 0xc
OUTER_SET SPL_EFFECT_DISPEL_RESISTANCE_OFFSET = 0xd
OUTER_SET SPL_EFFECT_DURATION_OFFSET = 0xe
OUTER_SET SPL_EFFECT_PROBABILITY_1_OFFSET = 0x12
OUTER_SET SPL_EFFECT_PROBABILITY_2_OFFSET = 0x13
OUTER_SET SPL_EFFECT_RESREF_OFFSET = 0x14


DEFINE_PATCH_FUNCTION ADD_SPL_ABILITY
    INT_VAR ability_type = 0
    RET ability_index
BEGIN
    READ_LONG SPL_ABILITIES_OFFSET abilities_offset
    READ_SHORT SPL_ABILITIES_COUNT abilities_count
    READ_LONG SPL_EFFECTS_OFFSET effects_offset

    SET ability_index = abilities_count
    SET ability_offset = abilities_offset + ability_index * SPL_ABILITY_SIZE

    INSERT_BYTES ability_offset SPL_ABILITY_SIZE

    WRITE_SHORT (ability_offset + SPL_ABILITY_TYPE_OFFSET) ability_type

    WRITE_SHORT SPL_ABILITIES_COUNT (ability_index + 1)
    WRITE_LONG SPL_EFFECTS_OFFSET (effects_offset + SPL_ABILITY_SIZE)
END


DEFINE_PATCH_FUNCTION ADD_SPL_ABILITY_EFFECT
    INT_VAR ability_index = ~~
        opcode = ~~
        target_type = ~~
        power = 0
        param_1 = 0
        param_2 = 0
        timing_mode = ~~
        dispel_resistance = 0
        duration = 0
        probability_1 = 100
        probability_2 = 0
    STR_VAR resref = ~~
    RET ability_effect_index
BEGIN
    READ_LONG SPL_ABILITIES_OFFSET abilities_offset
    READ_SHORT SPL_ABILITIES_COUNT abilities_count
    READ_LONG SPL_EFFECTS_OFFSET effects_offset

    SET ability_offset = abilities_offset + ability_index * SPL_ABILITY_SIZE
    READ_SHORT (ability_offset + SPL_ABILITY_EFFECTS_COUNT) ability_effects_count
    READ_SHORT (ability_offset + SPL_ABILITY_EFFECTS_INDEX_OFFSET) ability_effects_index_offset

    SET ability_effect_index = ability_effects_count
    SET ability_effect_offset = effects_offset + (ability_effects_index_offset + ability_effect_index) * SPL_EFFECT_SIZE
    INSERT_BYTES ability_effect_offset SPL_EFFECT_SIZE

    WRITE_SHORT (ability_effect_offset + SPL_EFFECT_OPCODE_OFFSET) opcode
    WRITE_BYTE (ability_effect_offset + SPL_EFFECT_TARGET_TYPE_OFFSET) target_type
    WRITE_BYTE (ability_effect_offset + SPL_EFFECT_POWER_OFFSET) power
    WRITE_LONG (ability_effect_offset + SPL_EFFECT_PARAM_1_OFFSET) param_1
    WRITE_LONG (ability_effect_offset + SPL_EFFECT_PARAM_2_OFFSET) param_2
    WRITE_BYTE (ability_effect_offset + SPL_EFFECT_TIMING_MODE_OFFSET) timing_mode
    WRITE_BYTE (ability_effect_offset + SPL_EFFECT_DISPEL_RESISTANCE_OFFSET) dispel_resistance
    WRITE_LONG (ability_effect_offset + SPL_EFFECT_DURATION_OFFSET) duration
    WRITE_BYTE (ability_effect_offset + SPL_EFFECT_PROBABILITY_1_OFFSET) probability_1
    WRITE_BYTE (ability_effect_offset + SPL_EFFECT_PROBABILITY_2_OFFSET) probability_2
    WRITE_ASCII (ability_effect_offset + SPL_EFFECT_RESREF_OFFSET) ~%resref%~ #8

    WRITE_SHORT (ability_offset + SPL_ABILITY_EFFECTS_COUNT) (ability_effects_count + 1)
    FOR (i = ability_effect_index + 1; i < ability_effects_count; ++i) BEGIN
        SET next_ability_offset = abilities_offset + i * SPL_ABILITY_SIZE
        WRITE_SHORT (next_ability_offset + SPL_ABILITY_EFFECTS_INDEX_OFFSET) (THIS + 1)
    END
END


DEFINE_PATCH_FUNCTION PATCH_SPL_ABILITY_EFFECT_IF
    INT_VAR opcode = ~~
        param_1 = "-1"
        param_2 = "-1"
        to_opcode = ~~
        to_param_1 = ~~
        to_param_2 = ~~
    STR_VAR to_resref = ~~
BEGIN
    READ_LONG SPL_ABILITIES_OFFSET abilities_offset
    READ_SHORT SPL_ABILITIES_COUNT abilities_count
    READ_LONG SPL_EFFECTS_OFFSET effects_offset

    FOR (ability_index = 0; ability_index < abilities_count; ++ability_index) BEGIN
        SET ability_offset = abilities_offset + ability_index * SPL_ABILITY_SIZE

        READ_SHORT (ability_offset + SPL_ABILITY_EFFECTS_COUNT) ability_effects_count
        READ_SHORT (ability_offset + SPL_ABILITY_EFFECTS_INDEX_OFFSET) ability_effects_index_offset

        FOR (ability_effect_index = 0; ability_effect_index < ability_effects_count; ++ability_effect_index) BEGIN
            SET ability_effect_offset = effects_offset +
                (ability_effects_index_offset + ability_effect_index) * SPL_EFFECT_SIZE

            READ_SHORT (ability_effect_offset + SPL_EFFECT_OPCODE_OFFSET) ability_effect_opcode
            READ_LONG (ability_effect_offset + SPL_EFFECT_PARAM_1_OFFSET) ability_effect_param_1
            READ_LONG (ability_effect_offset + SPL_EFFECT_PARAM_2_OFFSET) ability_effect_param_2
            
            PATCH_IF (
                ability_effect_opcode == opcode
                && (param_1 == "-1" || ability_effect_param_1 == param_1)
                && (param_2 == "-1" || ability_effect_param_2 == param_2)
            ) BEGIN
                PATCH_PRINT ~Patching SPL %SOURCE_RES% ability effect: %ability_effect_opcode% => %to_opcode%~

                WRITE_SHORT (ability_effect_offset + SPL_EFFECT_OPCODE_OFFSET) to_opcode
                WRITE_LONG (ability_effect_offset + SPL_EFFECT_PARAM_1_OFFSET) to_param_1
                WRITE_LONG (ability_effect_offset + SPL_EFFECT_PARAM_2_OFFSET) to_param_2
                WRITE_ASCII (ability_effect_offset + SPL_EFFECT_RESREF_OFFSET) ~%to_resref%~ #8
            END
        END
    END
END


DEFINE_PATCH_FUNCTION PATCH_SPL_CASTING_EFFECT_IF
    INT_VAR opcode = ~~
        param_1 = "-1"
        param_2 = "-1"
        to_opcode = ~~
        to_param_1 = ~~
        to_param_2 = ~~
    STR_VAR to_resref = ~~
BEGIN
    READ_SHORT SPL_CASTING_EFFECTS_INDEX_OFFSET casting_effects_index_offset
    READ_SHORT SPL_CASTING_EFFECTS_COUNT casting_effects_count
    READ_LONG SPL_EFFECTS_OFFSET effects_offset

    FOR (casting_effect_index = 0; casting_effect_index < casting_effects_count; ++casting_effect_index) BEGIN
        SET casting_effect_offset = effects_offset + 
            (casting_effects_index_offset + casting_effect_index) * SPL_EFFECT_SIZE       

        READ_SHORT (casting_effect_offset + SPL_EFFECT_OPCODE_OFFSET) casting_effect_opcode
        READ_LONG (casting_effect_offset + SPL_EFFECT_PARAM_1_OFFSET) casting_effect_param_1
        READ_LONG (casting_effect_offset + SPL_EFFECT_PARAM_2_OFFSET) casting_effect_param_2

        PATCH_IF (
            casting_effect_opcode == opcode
            && (param_1 == "-1" || casting_effect_param_1 == param_1)
            && (param_2 == "-1" || casting_effect_param_2 == param_2)
        ) BEGIN
            PATCH_PRINT ~Patching SPL %SOURCE_RES% casting effect: %casting_effect_opcode% => %to_opcode%~

            WRITE_SHORT (casting_effect_offset + SPL_EFFECT_OPCODE_OFFSET) to_opcode
            WRITE_LONG (casting_effect_offset + SPL_EFFECT_PARAM_1_OFFSET) to_param_1
            WRITE_LONG (casting_effect_offset + SPL_EFFECT_PARAM_2_OFFSET) to_param_2
            WRITE_ASCII (casting_effect_offset + SPL_EFFECT_RESREF_OFFSET) ~%to_resref%~ #8
        END
    END
END
