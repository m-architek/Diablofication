OUTER_SET EFF_V1_SIZE = 48
OUTER_SET EFF_V1_OPCODE_OFFSET = 0x0
OUTER_SET EFF_V1_TARGET_TYPE_OFFSET = 0x2
OUTER_SET EFF_V1_POWER_OFFSET = 0x3
OUTER_SET EFF_V1_PARAM_1_OFFSET = 0x4
OUTER_SET EFF_V1_PARAM_2_OFFSET = 0x8
OUTER_SET EFF_V1_TIMING_MODE_OFFSET = 0xc
OUTER_SET EFF_V1_DISPEL_RESISTANCE_OFFSET = 0xd
OUTER_SET EFF_V1_DURATION_OFFSET = 0xe
OUTER_SET EFF_V1_PROBABILITY_1_OFFSET = 0x12
OUTER_SET EFF_V1_PROBABILITY_2_OFFSET = 0x13
OUTER_SET EFF_V1_RESREF_OFFSET = 0x14
OUTER_SET EFF_V1_MAX_LVL_OFFSET = 0x1c
OUTER_SET EFF_V1_MIN_LVL_OFFSET = 0x20
OUTER_SET EFF_V1_SAVE_TYPE_OFFSET = 0x24
OUTER_SET EFF_V1_SAVE_BONUS_OFFSET = 0x28
OUTER_SET EFF_V1_SPECIAL_OFFSET = 0x2c


ACTION_DEFINE_ASSOCIATIVE_ARRAY EFF_V1_STRATEGY BEGIN 
    size => ~%EFF_V1_SIZE%~
    read_strategy => ~EFF_V1_READ_STRATEGY~
    write_strategy => ~EFF_V1_WRITE_STRATEGY~
END


ACTION_DEFINE_ASSOCIATIVE_ARRAY EFF_V1_READ_STRATEGY BEGIN 
    opcode => ~READ_EFF_V1_OPCODE~
    parameter1 => ~READ_EFF_V1_PARAMETER1~
    parameter2 => ~READ_EFF_V1_PARAMETER2~
    dispel_resistance => ~READ_EFF_V1_DISPEL_RESISTANCE~
    duration => ~READ_EFF_V1_DURATION~
    min_level => ~READ_EFF_V1_MIN_LEVEL~
    resource => ~READ_EFF_V1_RESOURCE~
END

DEFINE_PATCH_FUNCTION READ_EFF_V1_OPCODE INT_VAR offset_shift = ~~ RET opcode
BEGIN READ_SHORT (offset_shift + EFF_V1_OPCODE_OFFSET) opcode END

DEFINE_PATCH_FUNCTION READ_EFF_V1_PARAMETER1 INT_VAR offset_shift = ~~ RET parameter1
BEGIN READ_LONG (offset_shift + EFF_V1_PARAM_1_OFFSET) parameter1 END

DEFINE_PATCH_FUNCTION READ_EFF_V1_PARAMETER2 INT_VAR offset_shift = ~~ RET parameter2
BEGIN READ_LONG (offset_shift + EFF_V1_PARAM_2_OFFSET) parameter2 END

DEFINE_PATCH_FUNCTION READ_EFF_V1_DISPEL_RESISTANCE INT_VAR offset_shift = ~~ RET dispel_resistance
BEGIN READ_BYTE (offset_shift + EFF_V1_DISPEL_RESISTANCE_OFFSET) dispel_resistance END

DEFINE_PATCH_FUNCTION READ_EFF_V1_DURATION INT_VAR offset_shift = ~~ RET duration
BEGIN READ_LONG (offset_shift + EFF_V1_DURATION_OFFSET) duration END

DEFINE_PATCH_FUNCTION READ_EFF_V1_MIN_LEVEL INT_VAR offset_shift = ~~ RET min_level
BEGIN READ_LONG (offset_shift + EFF_V1_MIN_LVL_OFFSET) min_level END

DEFINE_PATCH_FUNCTION READ_EFF_V1_RESOURCE INT_VAR offset_shift = ~~ RET resource
BEGIN READ_ASCII (offset_shift + EFF_V1_RESREF_OFFSET) resource END


ACTION_DEFINE_ASSOCIATIVE_ARRAY EFF_V1_WRITE_STRATEGY BEGIN 
    opcode => ~WRITE_EFF_V1_OPCODE~
    parameter1 => ~WRITE_EFF_V1_PARAMETER1~
    parameter2 => ~WRITE_EFF_V1_PARAMETER2~
    timing_mode => ~WRITE_EFF_V1_TIMING_MODE~
    dispel_resistance => ~WRITE_EFF_V1_DISPEL_RESISTANCE~
    duration => ~WRITE_EFF_V1_DURATION~
    max_level => ~WRITE_EFF_V1_MAX_LEVEL~
    min_level => ~WRITE_EFF_V1_MIN_LEVEL~
    resource => ~WRITE_EFF_V1_RESOURCE~
END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_OPCODE INT_VAR offset_shift = ~~ opcode = ~~
BEGIN WRITE_SHORT (offset_shift + EFF_V1_OPCODE_OFFSET) opcode END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_TARGET INT_VAR offset_shift = ~~ target = ~~
BEGIN WRITE_BYTE (offset_shift + EFF_V1_TARGET_TYPE_OFFSET) target END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_POWER INT_VAR offset_shift = ~~ power = ~~
BEGIN WRITE_BYTE (offset_shift + EFF_V1_POWER_OFFSET) power END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_PARAMETER1 INT_VAR offset_shift = ~~ parameter1 = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V1_PARAM_1_OFFSET) parameter1 END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_PARAMETER2 INT_VAR offset_shift = ~~ parameter2 = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V1_PARAM_2_OFFSET) parameter2 END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_TIMING_MODE INT_VAR offset_shift = ~~ timing_mode = ~~
BEGIN WRITE_BYTE (offset_shift + EFF_V1_TIMING_MODE_OFFSET) timing_mode END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_DISPEL_RESISTANCE INT_VAR offset_shift = ~~ dispel_resistance = ~~
BEGIN WRITE_BYTE (offset_shift + EFF_V1_DISPEL_RESISTANCE_OFFSET) dispel_resistance END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_DURATION INT_VAR offset_shift = ~~ duration = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V1_DURATION_OFFSET) duration END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_PROBABILITY1 INT_VAR offset_shift = ~~ probability1 = ~~
BEGIN WRITE_BYTE (offset_shift + EFF_V1_PROBABILITY_1_OFFSET) probability1 END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_PROBABILITY2 INT_VAR offset_shift = ~~ probability2 = ~~
BEGIN WRITE_BYTE (offset_shift + EFF_V1_PROBABILITY_2_OFFSET) probability2 END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_MAX_LEVEL INT_VAR offset_shift = ~~ max_level = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V1_MAX_LVL_OFFSET) max_level END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_MIN_LEVEL INT_VAR offset_shift = ~~ min_level = ~~
BEGIN WRITE_LONG (offset_shift + EFF_V1_MIN_LVL_OFFSET) min_level END

DEFINE_PATCH_FUNCTION WRITE_EFF_V1_RESOURCE INT_VAR offset_shift = ~~ STR_VAR resource = 0
BEGIN WRITE_ASCII (offset_shift + EFF_V1_RESREF_OFFSET) ~%resource%~ #8 END
