OUTER_SET 2DA_CONTENT_OFFSET = 3
OUTER_SET 2DA_CONTENT_HEADER_ROW_INDEX = 2


DEFINE_PATCH_FUNCTION READ_2DA_ROW_NAMES
    RET_ARRAY out
BEGIN
    COUNT_2DA_ROWS 0 raw_rows_count
    SET content_rows_count = raw_rows_count - 2DA_CONTENT_OFFSET

    CLEAR_ARRAY out
    FOR (content_row_index = 0; content_row_index < content_rows_count; ++content_row_index) BEGIN
        SET raw_row_index = content_row_index + 2DA_CONTENT_OFFSET // READ_2DA_ENTRY counts from the begginign of the file
        READ_2DA_ENTRY raw_row_index 0 0 row_name
        DEFINE_ASSOCIATIVE_ARRAY out BEGIN ~%row_name%~ => ~%content_row_index%~ END
    END
END

DEFINE_PATCH_FUNCTION READ_2DA_COLUMN_NAMES
    RET_ARRAY out
BEGIN
    COUNT_2DA_COLS raw_columns_count
    SET content_columns_count = raw_columns_count - 1 // First column does not have name

    CLEAR_ARRAY out
    FOR (content_column_index = 0; content_column_index < content_columns_count; ++content_column_index) BEGIN
        READ_2DA_ENTRY 2DA_CONTENT_HEADER_ROW_INDEX content_column_index 0 column_name
        DEFINE_ASSOCIATIVE_ARRAY out BEGIN ~%column_name%~ => ~%content_column_index%~ END
    END
END

DEFINE_PATCH_FUNCTION READ_2DA_ROW
    STR_VAR row_name = 0
    RET_ARRAY out
BEGIN
    LPF READ_2DA_COLUMN_NAMES RET_ARRAY column_names = out END

    COUNT_2DA_ROWS 0 raw_rows_count
    SET content_rows_count = raw_rows_count - 2DA_CONTENT_OFFSET

    CLEAR_ARRAY out
    FOR (content_row_index = 0; content_row_index < content_rows_count; ++content_row_index) BEGIN
        SET raw_row_index = content_row_index + 2DA_CONTENT_OFFSET // READ_2DA_ENTRY counts from the begginign of the file
        READ_2DA_ENTRY raw_row_index 0 0 this_row_name
        
        PATCH_IF (~%this_row_name%~ STRING_EQUAL ~%row_name%~) BEGIN
            PHP_EACH column_names AS column_name => column_index BEGIN
                SET raw_column_index = column_index + 1 // First column does not have name
                READ_2DA_ENTRY raw_row_index raw_column_index 0 column_value
                DEFINE_ASSOCIATIVE_ARRAY out BEGIN ~%column_name%~ => ~%column_value%~ END
            END
        END
    END
END

DEFINE_PATCH_FUNCTION READ_2DA_COLUMN
    STR_VAR column_name = 0
    RET_ARRAY out
BEGIN
    COUNT_2DA_COLS raw_columns_count
    SET content_columns_count = raw_columns_count - 1 // First column does not have name

    FOR (content_column_index = 0; content_column_index < content_columns_count; ++content_column_index) BEGIN
        READ_2DA_ENTRY 2DA_CONTENT_HEADER_ROW_INDEX content_column_index 0 this_column_name
        PATCH_IF (~%this_column_name%~ STRING_EQUAL ~%column_name%~) BEGIN
            SET column_index = content_column_index
        END
    END

    PATCH_IF (NOT VARIABLE_IS_SET column_index) BEGIN
        PATCH_FAIL ~READ_2DA_COLUMN %column_name% FROM %SOURCE_RES%: NO SUCH COLUMN~
    END

    COUNT_2DA_ROWS 0 raw_rows_count
    SET content_rows_count = raw_rows_count - 2DA_CONTENT_OFFSET

    CLEAR_ARRAY out
    FOR (content_row_index = 0; content_row_index < content_rows_count; ++content_row_index) BEGIN
        SET raw_row_index = content_row_index + 2DA_CONTENT_OFFSET // READ_2DA_ENTRY counts from the begginign of the file
        READ_2DA_ENTRY raw_row_index 0 0 row_name

        SET raw_column_index = column_index + 1 // First column does not have name
        READ_2DA_ENTRY raw_row_index raw_column_index 0 column_value

        DEFINE_ASSOCIATIVE_ARRAY out BEGIN ~%row_name%~ => ~%column_value%~ END
    END
END

DEFINE_PATCH_FUNCTION READ_2DA_TABLE
    RET_ARRAY out
BEGIN
    LPF READ_2DA_COLUMN_NAMES RET_ARRAY column_names = out END
    LPF READ_2DA_ROW_NAMES RET_ARRAY row_names = out END

    CLEAR_ARRAY out
    PHP_EACH row_names AS row_name => content_row_index BEGIN 
        SET raw_row_index = content_row_index + 2DA_CONTENT_OFFSET // SET_2DA_ENTRY counts from the begginign of the file

        PHP_EACH column_names AS column_name => content_column_index BEGIN
            SET raw_column_index = content_column_index + 1 // First column does not have name

            READ_2DA_ENTRY raw_row_index raw_column_index 0 column_value
            SPRINT $out(~%row_name%~ ~%column_name%~) ~%column_value%~
        END
    END
END

DEFINE_PATCH_FUNCTION PATCH_2DA_TABLE
    STR_VAR patches_ref = 0
BEGIN
    LPF READ_2DA_COLUMN_NAMES RET_ARRAY column_names = out END
    LPF READ_2DA_ROW_NAMES RET_ARRAY row_names = out END

    PHP_EACH ~%patches_ref%~ AS patch_name => patch_ref BEGIN
        SET content_row_index = $row_names(~%patch_name%~)
        SET raw_row_index = content_row_index + 2DA_CONTENT_OFFSET // SET_2DA_ENTRY counts from the begginign of the file

        PHP_EACH ~%patch_ref%~ AS column_name => column_value BEGIN
            SET content_column_index = $column_names(~%column_name%~)
            SET raw_column_index = content_column_index + 1 // First column does not have name

            PATCH_LOG ~Patching %SOURCE_EXT% %SOURCE_RES% row %patch_name%: %column_name% = %column_value%~
            SET_2DA_ENTRY raw_row_index raw_column_index 0 ~%column_value%~
        END
    END
END
