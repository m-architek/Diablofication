OUTER_SET CRE_XP_VALUE_OFFSET = 0x0014 // 4 bytes
OUTER_SET CRE_HP_CURRENT_OFFSET = 0x0024 // 2 bytes
OUTER_SET CRE_HP_MAX_OFFSET = 0x0026 // 2 bytes
OUTER_SET CRE_EFF_VERSION_OFFSET = 0x0033 // 1 byte
OUTER_SET CRE_LEVEL_1_OFFSET = 0x0234 // 1 byte
OUTER_SET CRE_LEVEL_2_OFFSET = 0x0235 // 1 byte
OUTER_SET CRE_LEVEL_3_OFFSET = 0x0236 // 1 byte
OUTER_SET CRE_KIT_OFFSET = 0x0244 // 4 bytes
OUTER_SET CRE_EA_OFFSET = 0x0270 // 1 byte
OUTER_SET CRE_CLASS_OFFSET = 0x0273 // 1 byte
OUTER_SET CRE_ANIMATION_OFFSET = 0x0028 // 4 bytes
OUTER_SET CRE_SCRIPT_OVERRIDE_OFFSET = 0x0248 // 8 bytes (resref)

OUTER_SET CRE_KNOWN_SPELLS_OFFSET = 0x02a0 // 4 bytes
OUTER_SET CRE_KNOWN_SPELLS_COUNT_OFFSET = 0x02a4 // 4 bytes
OUTER_SET CRE_SPELL_INFO_OFFSET = 0x02a8 // 4 bytes
OUTER_SET CRE_SPELL_INFO_COUNT_OFFSET = 0x02ac // 4 bytes
OUTER_SET CRE_MEMORIZED_SPELLS_OFFSET = 0x02b0 // 4 bytes
OUTER_SET CRE_MEMORIZED_SPELLS_COUNT_OFFSET = 0x02b4 // 4 bytes
OUTER_SET CRE_ITEM_SLOTS_OFFSET = 0x02b8 // 4 bytes
OUTER_SET CRE_ITEMS_OFFSET = 0x02bc // 4 bytes
OUTER_SET CRE_ITEMS_COUNT_OFFSET = 0x02c0 // 4 bytes
OUTER_SET CRE_EFFECTS_OFFSET = 0x02c4 // 4 bytes
OUTER_SET CRE_EFFECTS_COUNT_OFFSET = 0x02c8 // 4 bytes

OUTER_SET CRE_KIT_NONE = 0
OUTER_SET CRE_KIT_TRUE_CLASS = 0x4000

OUTER_SET CRE_EFF_VERSION_1 = 0
OUTER_SET CRE_EFF_VERSION_2 = 1



DEFINE_PATCH_FUNCTION READ_CRE_CLASS 
    RET class_id
BEGIN
    READ_BYTE CRE_CLASS_OFFSET class_id
END


DEFINE_PATCH_FUNCTION READ_CRE_KIT
    RET kit_id
BEGIN
    READ_SHORT CRE_KIT_OFFSET kit_id_word1
    READ_SHORT (CRE_KIT_OFFSET + 0x2) kit_id_word2
    SET kit_id = (kit_id_word1 * 0x10000) + kit_id_word2
END


DEFINE_PATCH_FUNCTION READ_CRE_LEVEL
    RET level
BEGIN
    READ_BYTE CRE_LEVEL_1_OFFSET level1
    READ_BYTE CRE_LEVEL_2_OFFSET level2
    READ_BYTE CRE_LEVEL_3_OFFSET level3

    SET level = level1
    PATCH_IF (level2 > level) BEGIN
        SET level = level2
    END
    PATCH_IF (level3 > level) BEGIN
        SET level = level3
    END
END


DEFINE_PATCH_FUNCTION READ_CRE_HP
    RET current_hp max_hp
BEGIN
    READ_SHORT CRE_HP_CURRENT_OFFSET current_hp
    READ_SHORT CRE_HP_MAX_OFFSET max_hp
END


DEFINE_PATCH_FUNCTION READ_CRE_XP_VALUE
    RET xp_value
BEGIN
    READ_LONG CRE_XP_VALUE_OFFSET xp_value
END


DEFINE_PATCH_FUNCTION PATCH_CRE_HP
    INT_VAR current_hp = ~~
        max_hp = ~~
BEGIN
    WRITE_SHORT CRE_HP_CURRENT_OFFSET current_hp
    WRITE_SHORT CRE_HP_MAX_OFFSET max_hp
END


DEFINE_PATCH_FUNCTION PATCH_CRE_EA
    INT_VAR ea = ~~
BEGIN
    WRITE_BYTE CRE_EA_OFFSET ea
END


DEFINE_PATCH_FUNCTION PATCH_CRE_ANIMATION
    INT_VAR animation = ~~
BEGIN
    WRITE_LONG CRE_ANIMATION_OFFSET animation
END


DEFINE_PATCH_FUNCTION RESOLVE_CRE_OVERRIDE_SCRIPT
    STR_VAR prefix = 0
    RET script_resref
BEGIN 
    READ_ASCII CRE_SCRIPT_OVERRIDE_OFFSET script_resref

    PATCH_IF (NOT FILE_EXISTS_IN_GAME ~%script_resref%.BCS~) BEGIN 
        PATCH_LOG ~Creating Override script for %SOURCE_EXT% %SOURCE_RES%. Existing value: %script_resref%~

        LPF GET_UNIQUE_FILE_NAME 
            STR_VAR extension = ~BCS~
                    base = ~%prefix%#OVERRIDE_SCRIPT#%SOURCE_RES%~
            RET script_resref = filename
            END

        WRITE_ASCII CRE_SCRIPT_OVERRIDE_OFFSET ~%script_resref%~ #8 
    END
END


DEFINE_PATCH_FUNCTION PATCH_CRE_EFFECTS 
    STR_VAR patches_ref = 0
BEGIN 
    READ_LONG CRE_EFFECTS_OFFSET effects_offset
    READ_LONG CRE_EFFECTS_COUNT_OFFSET effects_count
    READ_BYTE CRE_EFF_VERSION_OFFSET eff_version
    
    PATCH_MATCH ~%eff_version%~ WITH
        ~%CRE_EFF_VERSION_1%~ BEGIN
            LPF PATCH_EFF_EFFECT_LIST INT_VAR offset_shift = effects_offset effects_count
                STR_VAR patches_ref eff_strategy_ref = ~EFF_V1_STRATEGY~ effect_category = ~CRE~
                RET effects_count_diff
                END
            LPF ADJUST_CRE_AFTER_EFFECTS_COUNT_CHANGE 
                INT_VAR effects_count_diff
                        effect_size = EFF_V1_SIZE
                        effects_offset
                        effects_count
                RET effects_count
                END
        END
        ~%CRE_EFF_VERSION_2%~ BEGIN 
            LPF PATCH_EFF_EFFECT_LIST INT_VAR offset_shift = effects_offset effects_count
                STR_VAR patches_ref eff_strategy_ref = ~EFF_V2CRE_STRATEGY~ effect_category = ~CRE~
                RET effects_count_diff
                END
            LPF ADJUST_CRE_AFTER_EFFECTS_COUNT_CHANGE 
                INT_VAR effects_count_diff
                        effect_size = EFF_V2CRE_SIZE
                        effects_offset
                        effects_count
                RET effects_count
                END
        END
        DEFAULT PATCH_WARN ~PATCH_CRE_EFFECTS %SOURCE_EXT% %SOURCE_RES% invalid EFF version value: %eff_version%~
    END
END


DEFINE_PATCH_FUNCTION ADJUST_CRE_AFTER_EFFECTS_COUNT_CHANGE 
    INT_VAR effects_count_diff = ~~
            effect_size = ~~
            effects_offset = ~~
            effects_count = ~~
    RET effects_count
BEGIN 
    PATCH_IF (effects_count_diff != 0) BEGIN 
        READ_LONG CRE_KNOWN_SPELLS_OFFSET known_spells_offset
        READ_LONG CRE_SPELL_INFO_OFFSET spell_info_offset
        READ_LONG CRE_MEMORIZED_SPELLS_OFFSET memorized_spells_offset
        READ_LONG CRE_ITEM_SLOTS_OFFSET item_slots_offset
        READ_LONG CRE_ITEMS_OFFSET items_offset
        
        SET offset_diff = effects_count_diff * effect_size

        PATCH_IF (effects_offset < known_spells_offset) BEGIN 
            SET known_spells_offset = known_spells_offset + offset_diff
            WRITE_LONG CRE_KNOWN_SPELLS_OFFSET known_spells_offset
        END
        PATCH_IF (effects_offset < spell_info_offset) BEGIN 
            SET spell_info_offset = spell_info_offset + offset_diff
            WRITE_LONG CRE_SPELL_INFO_OFFSET spell_info_offset
        END
        PATCH_IF (effects_offset < memorized_spells_offset) BEGIN 
            SET memorized_spells_offset = memorized_spells_offset + offset_diff
            WRITE_LONG CRE_MEMORIZED_SPELLS_OFFSET memorized_spells_offset
        END
        PATCH_IF (effects_offset < item_slots_offset) BEGIN 
            SET item_slots_offset = item_slots_offset + offset_diff
            WRITE_LONG CRE_ITEM_SLOTS_OFFSET item_slots_offset
        END
        PATCH_IF (effects_offset < items_offset) BEGIN 
            SET items_offset = items_offset + offset_diff
            WRITE_LONG CRE_ITEMS_OFFSET items_offset
        END

        SET effects_count = effects_count + effects_count_diff
        WRITE_LONG CRE_EFFECTS_COUNT_OFFSET effects_count
    END
END
