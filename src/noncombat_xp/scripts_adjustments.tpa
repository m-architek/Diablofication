DEFINE_ACTION_FUNCTION APPLY_SCRIPTS_ADJUSTMENTS BEGIN

    COPY_EXISTING_REGEXP GLOB ~^.+\.dlg$~ ~override~
        DECOMPILE_AND_PATCH BEGIN
            LPF PATCH_ADD_XP_PARTY END
        END
        BUT_ONLY

    COPY_EXISTING_REGEXP GLOB ~^.+\.bcs$~ ~override~
        DECOMPILE_AND_PATCH BEGIN
            LPF PATCH_ADD_XP_PARTY END
        END
        BUT_ONLY
END

DEFINE_PATCH_FUNCTION PATCH_ADD_XP_PARTY BEGIN
    REPLACE_EVALUATE CASE_INSENSITIVE ~AddExperienceParty(\([0-9]+\))~
        BEGIN
            SET raw_calculated_xp = MATCH1 / 6
            SET round_limit = 100
            SET calculated_xp = raw_calculated_xp - (raw_calculated_xp MODULO round_limit)
            PATCH_IF (calculated_xp > 0) BEGIN 
                PATCH_LOG ~PATCH_NONCOMBAT_XP %SOURCE_EXT% %SOURCE_RES%: Replace action %MATCH0%. Calculated XP: %calculated_xp%~
                SPRINT new_action ~~~~~
                    AddXPObject(Player1,%calculated_xp%)
                    AddXPObject(Player2,%calculated_xp%)
                    AddXPObject(Player3,%calculated_xp%)
                    AddXPObject(Player4,%calculated_xp%)
                    AddXPObject(Player5,%calculated_xp%)
                    AddXPObject(Player6,%calculated_xp%)
                ~~~~~ 
            END ELSE BEGIN 
                PATCH_LOG ~PATCH_NONCOMBAT_XP %SOURCE_EXT% %SOURCE_RES%: Remove action %MATCH0%~
                SPRINT new_action ~NoAction()~
            END
        END 
        ~%new_action%~
END
