DEFINE_ACTION_FUNCTION APPLY_SCRIPTS_ADJUSTMENTS BEGIN

    COPY_EXISTING_REGEXP GLOB ~^.+\.dlg$~ ~override~
        DECOMPILE_AND_PATCH BEGIN
            LPF PATCH_ADD_XP_PARTY END
        END
        BUT_ONLY

    COPY_EXISTING_REGEXP GLOB ~^.+\.bcs$~ ~override~
        DECOMPILE_AND_PATCH BEGIN
            LPF PATCH_ADD_XP_PARTY END
        END
        BUT_ONLY
END

DEFINE_PATCH_FUNCTION PATCH_ADD_XP_PARTY BEGIN
    REPLACE_EVALUATE CASE_INSENSITIVE ~AddExperienceParty(\([0-9]+\))~
        BEGIN
            LPF MATH_ROUND_DOWN_TO_SIGFIGS INT_VAR value = (MATCH1 / 6) 
                sigfigs = 3
                RET calculated_xp = out
                END
            PATCH_IF (calculated_xp < 1000) BEGIN 
                LPF MATH_ROUND_UP INT_VAR value = calculated_xp
                    precision = 10
                    RET calculated_xp = out
                    END
            END
            PATCH_IF (calculated_xp = 0) BEGIN 
                SET calculated_xp = 1
            END

            PATCH_LOG ~PATCH_NONCOMBAT_XP %SOURCE_EXT% %SOURCE_RES%: Replace action %MATCH0%. Calculated XP: %calculated_xp%~
            
            SPRINT add_xp_action ~~~~~
                AddXPObject(Player1,%calculated_xp%)
                AddXPObject(Player2,%calculated_xp%)
                AddXPObject(Player3,%calculated_xp%)
                AddXPObject(Player4,%calculated_xp%)
                AddXPObject(Player5,%calculated_xp%)
                AddXPObject(Player6,%calculated_xp%)
            ~~~~~ 
        END 
        ~%add_xp_action%~
END
