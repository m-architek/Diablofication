DEFINE_ACTION_FUNCTION APPLY_COMPANIONS_ADJUSTMENTS
    STR_VAR hpclass_table_ref = 0 
        hp_lvl1_values_ref = 0
        hp_static_increment_values_ref = 0
BEGIN
    LAF APPLY_KITS_READ RET_ARRAY kits END

    LAF JOINABLE_NPC_ARRAY RET_ARRAY JOINABLE_NPC_ARRAY END
    
    ACTION_PHP_EACH JOINABLE_NPC_ARRAY AS cre => dv BEGIN
        COPY_EXISTING ~%cre%~ ~override~
            LPF PATCH_COMPANION_CRE 
                STR_VAR kits_ref = kits
                    hpclass_table_ref 
                    hp_lvl1_values_ref 
                    hp_static_increment_values_ref 
                END
            BUT_ONLY
    END
END

DEFINE_ACTION_FUNCTION APPLY_KITS_READ
    RET_ARRAY kits
BEGIN 
    ACTION_CLEAR_ARRAY kits

    COPY_EXISTING - ~kitlist.2da~ ~~
        CLEAR_ARRAY kitlist_rowname
        LPF READ_2DA_COLUMN STR_VAR column_name = ~ROWNAME~
            RET_ARRAY kitlist_rowname = out
            END
        CLEAR_ARRAY kitlist_kitids
        LPF READ_2DA_COLUMN STR_VAR column_name = ~KITIDS~
            RET_ARRAY kitlist_kitids = out
            END
        PHP_EACH kitlist_kitids AS kit_index => kit_ids BEGIN 
            PATCH_IF (NOT ~%kit_ids%~ STR_EQ ~*~) BEGIN 
                SET kit_ids = ~%kit_ids%~ // align formattting
                SPRINT kit_name $kitlist_rowname(~%kit_index%~)
                TO_UPPER kit_name
                SPRINT $kits(~%kit_ids%~) ~%kit_name%~
            END
        END
END

DEFINE_PATCH_FUNCTION PATCH_COMPANION_CRE   
    STR_VAR kits_ref = 0
        hpclass_table_ref = 0 
        hp_lvl1_values_ref = 0
        hp_static_increment_values_ref = 0
BEGIN
    LPF READ_CRE_LEVEL RET level END

    LPF READ_CRE_CLASS RET class_id END
    LOOKUP_IDS_SYMBOL_OF_INT class_name ~class~ class_id

    LPF READ_CRE_KIT RET kit_id END
    SPRINT kit_name $~%kits_ref%~(~%kit_id%~)

    SPRINT hp_table $~%hpclass_table_ref%~(~%class_name%~)
    PATCH_IF (
        kit_id != CRE_KIT_NONE
        && kit_id != CRE_KIT_TRUE_CLASS
        && VARIABLE_IS_SET $~%hpclass_table_ref%~(~%kit_name%~)
    ) BEGIN
        SPRINT hp_table $~%hpclass_table_ref%~(~%kit_name%~)
    END

    PATCH_IF (
        VARIABLE_IS_SET $~%hp_lvl1_values_ref%~(~%hp_table%~) AND
        VARIABLE_IS_SET $~%hp_static_increment_values_ref%~(~%hp_table%~)
    ) BEGIN 
        SET hp_lvl1 = $~%hp_lvl1_values_ref%~(~%hp_table%~)
        SET hp_static_increment = $~%hp_static_increment_values_ref%~(~%hp_table%~)
        SET max_hp = hp_lvl1 + ((level - 1) * hp_static_increment)

        LPF READ_CRE_HP RET existing_current_hp = current_hp existing_max_hp = max_hp END
        SET rate = (existing_current_hp * 100) / existing_max_hp
        SET current_hp = (max_hp * rate) / 100

        PATCH_IF (current_hp > 0 AND max_hp > 0)  BEGIN
            PATCH_LOG ~%SOURCE_RES%: %hp_table% level %level% => %current_hp%/%max_hp% hp (rate %rate%%)~
            LPF PATCH_CRE_HP INT_VAR current_hp max_hp END
        END ELSE BEGIN
            PATCH_FAIL ~Invalid COMPANION CRE %SOURCE_RES%: calculated hp %current_hp%/%max_hp% (rate %rate%%)~
        END
    END ELSE BEGIN 
        PATCH_IF (NOT ~%SOURCE_RES%~ STR_EQ ~CEBEAR01~) BEGIN 
            PATCH_WARN ~Cannot patch COMPANION CRE %SOURCE_RES% with class %class_name% and kit %kit_name%.~
        END
    END
END
